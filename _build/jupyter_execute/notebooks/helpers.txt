def omega_func(eta, x_bar, u_bar, e=1):
    return x_bar**(eta - 1)*s*(1 - u_bar)/(u_bar*e)

def rho_func(eta, s, u, x, omega, tau):
    return omega*x**(-1*eta)*tau/((1 + tau)*s)

def tau_bar_func(eta, u_bar):
    return (1 - eta)*u_bar/eta

def q_func(x, omega, eta):
    return omega*x**(-eta)

def tau_func(s, rho, q):
    return s*rho/(q - s*rho)

GY_func = lambda GC:GC/(1 + GC) # G/Y
CY_func = lambda GC:1 - GY(GC)  # C/Y
GC_func = lambda GY:GY/(1 - GY) # G/C

def m_func(M, eta, u, GY, tau):
    return (1 - u)*M/(1 - GY*eta/(1 - eta)*tau*u*M)

def z0_func(eta, u_bar):
    return 1/((1 - eta)*(1 - u_bar)**2)
def z1_func(GY_bar, u_bar):
    return GY_bar*(1 - GY_bar)/u_bar
